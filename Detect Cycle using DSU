class Solution
{
    public:
    
    int parent[10001];
	 int find_parent(int x) {
	     if(parent[x]==x) return x;
	     return parent[x] = find_parent(parent[x]);
	 }
	 
	 void Union(int a, int b) {
	     a = find_parent(a);
	     b = find_parent(b);
	     parent[b] = a;
	 }
	 
	 void make_set(int node){
	     parent[node] = node;
	 }
   
	int detectCycle(int V, vector<int>adj[])
	{
	    // code here;
	    for(int i=0;i<V;i++){
	        make_set(i);
	     }
	    
	    for(int i=0;i<V;i++) {
	        for(auto child:adj[i]) {
	            if(child>i && find_parent(i) == find_parent(child)) return true;
	            Union(i,child);
	        }
	    }
	    return false;
	}
};
