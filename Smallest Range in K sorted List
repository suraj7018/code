#include<bits/stdc++.h>
class node{
    public:
    int data;
    int row;
    int col;

    node(int d, int r, int c){
        this ->data =d;
        this ->row =r;
        this ->col = c;
    }
};

class compare{
    public:
    bool operator()(node* a, node* b){
        return a->data > b->data;
    }
};

int kSorted(vector<vector<int>> &a, int k, int n) {
    int mini = INT_MAX;
    int maxi = INT_MIN;
    priority_queue<node*, vector<node*>, compare > minheap;

    for(int i =0;i<k;i++){
        int element = a[i][0];
        maxi = max(maxi, element);
        mini = min(mini, element);
        minheap.push(new node(element, i, 0));
    }
    int start = mini;
    int end = maxi;
    while(!minheap.empty()){
        node* temp = minheap.top();
        minheap.pop();

        mini = temp ->data;
        if(maxi-mini < end-start){
            start = mini;
            end = maxi;
        }
        if(temp ->col+1 <n){
            maxi = max(maxi, a[temp->row][temp->col+1]);
            minheap.push(new node(a[temp->row][temp->col+1],temp->row, temp->col+1));
        }
        else{
            break;
        }
    }
    return (end - start +1);
}
