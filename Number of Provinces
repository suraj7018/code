class Solution {
  private:
  void dfs(int node, vector<int> adjl[], vector<int> &visited){
      visited[node] = 1;
      for(auto it : adjl[node]){
          if(visited[it] == 0){
              dfs(it, adjl, visited);
          }
      }
  }
  public:
    int numProvinces(vector<vector<int>> adj, int V) {
        // code here
        vector<int> adjlist[V];
        for(int i = 0; i<V; i++){
            for(int j = 0; j<V; j++){
                if(adj[i][j] == 1){
                    adjlist[i].push_back(j);
                    adjlist[j].push_back(i);
                }
            }
        }
        vector<int> visited(V, 0);
        int ans = 0;
        for(int i = 0; i<V; i++){
            if(visited[i] == 0){
                ans++;
                dfs(i, adjlist, visited);
            }
        }
        return ans;
    }
};
