#include <bits/stdc++.h> 
/************************************************************

    Following is the Binary Tree node structure
    
    template <typename T>
    class TreeNode {
        public :
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~TreeNode() {
            if(left)
                delete left;
            if(right)
                delete right;
        }
    };

************************************************************/

class info{
    public:
    int maxi;
    int mini;
    bool isbst;
    int size;
};

  info solve(TreeNode<int>* root, int &size){
      // base case
      if(root == NULL){
          return{INT_MIN,INT_MAX,true,0};
      }

      info left = solve(root ->left, size);
      info right = solve(root ->right, size);

      info currnode;
      currnode.size = left.size + right.size + 1;
      currnode.maxi = max(root ->data, right.maxi);
      currnode.mini = min(root ->data, left.mini);

      if(left.isbst && right.isbst && (root ->data > left.maxi && root ->data < right.mini)){
          currnode.isbst = true;
      }
      else{
          currnode.isbst =  false;
      }
      
      if(currnode.isbst){
          size = max(size, currnode.size);
      }
      return currnode;
  }

int largestBST(TreeNode<int>* root) 
{
    int maxsize= 0;
    info temp = solve(root, maxsize);
    return maxsize;
}
