#include <bits/stdc++.h> 
int solverec(vector<int> &num, int n,vector<int> &dp){
    // base case;
    if(n==0)
    return 0;
    if(n<0)
    return INT_MAX;

    if(dp[n]!=-1)
    return dp[n];

    int mini = INT_MAX;
    for(int i=0;i<num.size();i++){
        int ans = solverec(num,n-num[i],dp);
        if(ans!=INT_MAX){
            mini = min(mini, 1+ans);
        }
    }
    dp[n] = mini;
    return dp[n];
}
int minimumElements(vector<int> &num, int x)
{
    vector<int> dp(x+1,-1);
    int ans = solverec(num, x, dp);
    if(ans==INT_MAX){
        return -1;
    }
    return ans;
}


////////////////////////////////////////////////////////

#include <bits/stdc++.h>
int minimumElements(vector<int> &num, int x) {
    int n = num.size();
    vector<int> dp(x + 1, INT_MAX);
    dp[0] = 0;

    for (int i = 1; i <= x; i++) {
        for (int j = 0; j < n; j++) {
            if (i - num[j] >= 0 && dp[i - num[j]] != INT_MAX) {
                dp[i] = min(dp[i], 1 + dp[i - num[j]]);
            }
        }
    }

    if (dp[x] == INT_MAX) {
        return -1;
    }
    return dp[x];
}
